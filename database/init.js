// =============================================
// SCRIPT DE INICIALIZA√á√ÉO DO BANCO
// Execute: node database/init.js
// =============================================

require('dotenv').config();
const { sequelize, testConnection } = require('../config/database');
const User = require('../models/User');

async function initDatabase() {
  try {
    console.log('üîÑ Iniciando configura√ß√£o do banco...\n');

    // Testar conex√£o
    console.log('1. Testando conex√£o...');
    const connected = await testConnection();
    if (!connected) {
      throw new Error('Falha na conex√£o');
    }

    // Sincronizar modelos (criar tabelas)
    console.log('\n2. Criando tabelas...');
    await sequelize.sync({ force: false }); // force: true apaga e recria
    console.log('‚úÖ Tabelas criadas!');

    // Criar usu√°rio admin de teste
    console.log('\n3. Criando usu√°rio de teste...');
    const existingUser = await User.findOne({ where: { email: 'teste@oceasupplements.com' } });

    if (!existingUser) {
      const password_hash = await User.hashPassword('senha123');
      await User.create({
        name: 'Usu√°rio Teste',
        email: 'teste@oceasupplements.com',
        password_hash,
        phone: '11999999999'
      });
      console.log('‚úÖ Usu√°rio de teste criado!');
      console.log('   Email: teste@oceasupplements.com');
      console.log('   Senha: senha123');
    } else {
      console.log('‚ö†Ô∏è  Usu√°rio de teste j√° existe');
    }

    console.log('\n‚úÖ Banco de dados configurado com sucesso!');
    process.exit(0);

  } catch (error) {
    console.error('\n‚ùå Erro ao configurar banco:', error.message);
    process.exit(1);
  }
}

initDatabase();
